"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
const tools_1 = require("../tools");
function transformWidget(widget, options) {
    if (widget.name && options.multiChildClasses && widget.name != 'Slot') {
        if (options.multiChildClasses.indexOf(widget.name) < 0) {
            const childrenParam = tools_1.findParam(widget, 'children', true);
            if (childrenParam) {
                const children = childrenParam.value;
                lodash_1.pull(widget.params, childrenParam);
                if (children.length == 0) {
                    // skip empty name
                }
                else if (children.length > 1) {
                    if (options.autowrapChildren) {
                        widget.params.push({
                            class: 'param',
                            type: 'widget',
                            name: 'child',
                            value: {
                                class: 'widget',
                                constant: false,
                                name: options.autowrapChildrenClass,
                                params: [
                                    {
                                        class: 'param',
                                        type: 'widgets',
                                        name: 'children',
                                        value: children,
                                        resolved: true
                                    }
                                ]
                            },
                            resolved: true
                        });
                    }
                    else {
                        throw `${widget.name} can only have a single child but has multiple children.\nWrap the children in a wrapper like "column", \nor turn on the autowrapChildren option to have it done automatically.`;
                    }
                }
                else {
                    widget.params.push({
                        class: 'param',
                        type: 'widget',
                        name: 'child',
                        value: children[0],
                        resolved: true
                    });
                }
                lodash_1.pull(widget.params, childrenParam);
            }
        }
    }
    // options.multiChildClasses
    tools_1.applyOnDescendants(widget, descendant => transformWidget(descendant, options));
    return widget;
}
exports.transformWidget = transformWidget;

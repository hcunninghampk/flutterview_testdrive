"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tools_1 = require("../tools");
const change_case_1 = require("change-case");
/**
 * This plugin looks for widgets from tags like foo:bar, and interprets the :bar
 * part as meaning the constructor function of foo. It will remove the :bar part
 * from the tag and add a constructor parameter to the widget.
 *
 * @param widget the widget tree to process
 * @param options the flutter-view options
 * @return the transformed widget tree
 */
function transformWidget(widget, options) {
    if (widget.originalName) {
        const split = widget.originalName.split(':');
        if (split.length == 2) {
            widget.name = change_case_1.upperCaseFirst(change_case_1.camelCase(split[0]));
            if (!widget.params)
                widget.params = [];
            widget.params.push({
                class: 'param',
                type: 'literal',
                name: 'constructor',
                value: split[1],
                resolved: true
            });
        }
    }
    tools_1.applyOnDescendants(widget, descendant => transformWidget(descendant, options));
    return widget;
}
exports.transformWidget = transformWidget;

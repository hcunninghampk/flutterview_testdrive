{
  "_from": "parsimmon@^0.7.0",
  "_id": "parsimmon@0.7.2",
  "_inBundle": false,
  "_integrity": "sha1-gF/G0e1S0Mm2XL9rTaWKFh5o5+E=",
  "_location": "/flutter-view/parsimmon",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "parsimmon@^0.7.0",
    "name": "parsimmon",
    "escapedName": "parsimmon",
    "rawSpec": "^0.7.0",
    "saveSpec": null,
    "fetchSpec": "^0.7.0"
  },
  "_requiredBy": [
    "/flutter-view/style-parser"
  ],
  "_resolved": "https://registry.npmjs.org/parsimmon/-/parsimmon-0.7.2.tgz",
  "_shasum": "805fc6d1ed52d0c9b65cbf6b4da58a161e68e7e1",
  "_spec": "parsimmon@^0.7.0",
  "_where": "C:\\$HOME\\.node_modules_global\\node_modules\\flutter-view\\node_modules\\style-parser",
  "author": {
    "name": "Jeanine Adkisson",
    "email": "jneen at jneen dot net"
  },
  "bugs": {
    "url": "https://github.com/jneen/parsimmon/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Brian Mock",
      "email": "brian@mockbrian.com"
    }
  ],
  "dependencies": {},
  "deprecated": false,
  "description": "A monadic LL(infinity) parser combinator library",
  "devDependencies": {
    "chai": "1.5.x",
    "mocha": "1.8.x",
    "ncp": "^2.0.0",
    "rimraf": "^2.5.2",
    "uglify-js": "2.x"
  },
  "files": [
    "src",
    "build"
  ],
  "homepage": "https://github.com/jneen/parsimmon#readme",
  "keywords": [
    "parsing",
    "parse",
    "parser combinators"
  ],
  "license": "MIT",
  "main": "src/parsimmon.js",
  "name": "parsimmon",
  "repository": {
    "type": "git",
    "url": "git://github.com/jneen/parsimmon.git"
  },
  "scripts": {
    "build:browser": "ncp src/parsimmon.js build/parsimmon.browser.js",
    "build:browser.min": "uglifyjs --mangle < src/parsimmon.js > build/parsimmon.browser.min.js",
    "clean": "rimraf build/*.js",
    "prepublish": "npm run test && npm run clean && npm run build:browser && npm run build:browser.min",
    "test": "mocha -u tdd test/intro.js test/*.test.js"
  },
  "version": "0.7.2"
}
